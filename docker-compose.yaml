services:

  api_gateway:
    build:
      context: ./backend/api_gateway
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:8000 --workers 4 'gateway.app:app' --reload
    volumes:
      - ./backend/api_gateway/:/api-gateway
    ports:
      - "8000:8000"
    networks:
      - cms

  nginx_api_gateway:
    image: nginx:latest
    volumes:
      - ./backend/api_gateway/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - api_gateway
    networks:
      - cms

  articles:
    build:
      context: ./backend/articles
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:8100 --workers 4 'main:app' --reload
    volumes:
      - ./backend/articles/:/articles-service
    ports:
      - "8100:8100"
    depends_on:
      db:
        condition: service_healthy
      db_test:
        condition: service_healthy
    networks:
      - cms

  nginx_articles:
    image: nginx:latest
    volumes:
      - ./backend/articles/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "81:81"
    depends_on:
      - articles
    networks:
      - cms

  translations:
    build:
      context: ./backend/translations
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:8200 --workers 4 'main:app' --reload
    volumes:
      - ./backend/translations/:/translations-service
    ports:
      - "8200:8200"
    depends_on:
      db:
        condition: service_healthy
      db_test:
        condition: service_healthy
    networks:
      - cms

  nginx_translations:
    image: nginx:latest
    volumes:
      - ./backend/translations/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "82:82"
    depends_on:
      - translations
    networks:
      - cms

  users:
    build:
      context: ./backend/users
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:8300 --workers 4 'main:app' --reload
    volumes:
      - ./backend/users/:/users-service
    ports:
      - "8300:8300"
    depends_on:
      db:
        condition: service_healthy
      db_test:
        condition: service_healthy
    networks:
      - cms

  nginx_users:
    image: nginx:latest
    volumes:
      - ./backend/users/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "83:83"
    depends_on:
      - users
    networks:
      - cms

  db:
    image: mysql:latest
    volumes:
      - db:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_1
      MYSQL_USER: user
      MYSQL_PASSWORD: user1234
      MYSQL_TCP: 3306
    ports:
      - "3306:3306"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    networks:
      - cms

  db_test:
    image: mysql:latest
    volumes:
      - db_test:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_test
      MYSQL_USER: user
      MYSQL_PASSWORD: user1234
      MYSQL_TCP_PORT: 3307
    ports:
      - "3307:3307"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    networks:
      - cms

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    depends_on:
      - api_gateway
    networks:
      - cms


networks:
  cms:

volumes:
  db:
  db_test:
  nginx:
