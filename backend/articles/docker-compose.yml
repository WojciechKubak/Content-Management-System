version: "3.8"

services:
  mysql-articles:
    image: mysql:latest
    volumes:
      - mysql-articles:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_1
      MYSQL_USER: user
      MYSQL_PASSWORD: user1234
      MYSQL_TCP_PORT: 3310
    ports:
      - "3310:3310"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    networks:
      - articles-network

  mysql-articles-test:
    image: mysql:latest
    volumes:
      - mysql-articles-test:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_test
      MYSQL_USER: user
      MYSQL_PASSWORD: user1234
      MYSQL_TCP_PORT: 3311
    ports:
      - "3311:3311"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    networks:
      - articles-network

  nginx-articles:
    image: nginx:latest
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "82:82"
    networks:
      articles-network:
        aliases:
          - articles
    depends_on:
      - articles-api-service

  articles-api-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:8002 --workers 4 'articles.app:app' --reload
    volumes:
      - ./:/articles-service
    depends_on:
      mysql-articles:
        condition: service_healthy
      mysql-articles-test:
        condition: service_healthy
    ports:
      - "8002:8002"
    networks:
      - broker
      - articles-network

networks:
  articles-network:
    name: articles-network
  broker:
    external: true

volumes:
  mysql-articles:
  mysql-articles-test:
  nginx-articles:
